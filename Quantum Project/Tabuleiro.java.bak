//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Sun 27-Nov-2011 by the VDM++ to JAVA Code Generator
// (v8.0 - Mon 09-Jul-2007 09:32:40)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import jp.co.csk.vdm.toolbox.VDM.jdk.*;
// ***** VDMTOOLS END Name=imports



public class Tabuleiro implements EvaluatePP {


// ***** VDMTOOLS START Name=Casa KEEP=NO
  public static class Casa implements Record {

    public Integer linha;

    public Character coluna;


    public Casa () {}


    public Casa (Integer p1, Character p2) {

      linha = p1;
      coluna = p2;
    }


    public Object clone () {
      return new Casa(linha, coluna);
    }


    public String toString () {
      return "mk_Tabuleiro`Casa(" + UTIL.toString(linha) + "," + UTIL.toString(coluna) + ")";
    }


    public boolean equals (Object obj) {
      if (!(obj instanceof Casa)) 
        return false;
      else {

        Casa temp = (Casa) obj;
        return UTIL.equals(linha, temp.linha) && UTIL.equals(coluna, temp.coluna);
      }
    }


    public int hashCode () {
      return (linha == null ? 0 : linha.hashCode()) + (coluna == null ? 0 : coluna.hashCode());
    }

  }
// ***** VDMTOOLS END Name=Casa
;


// ***** VDMTOOLS START Name=Peca KEEP=NO
  public static class Peca implements Record {

    public Object tipo;

    public Integer jogador;

    public Integer num_uelem;


    public Peca () {}


    public Peca (Object p1, Integer p2, Integer p3) {

      tipo = p1;
      jogador = p2;
      num_uelem = p3;
    }


    public Object clone () {
      return new Peca((Object) UTIL.clone(tipo), jogador, num_uelem);
    }


    public String toString () {
      return "mk_Tabuleiro`Peca(" + UTIL.toString(tipo) + "," + UTIL.toString(jogador) + "," + UTIL.toString(num_uelem) + ")";
    }


    public boolean equals (Object obj) {
      if (!(obj instanceof Peca)) 
        return false;
      else {

        Peca temp = (Peca) obj;
        return UTIL.equals(tipo, temp.tipo) && UTIL.equals(jogador, temp.jogador) && UTIL.equals(num_uelem, temp.num_uelem);
      }
    }


    public int hashCode () {
      return (tipo == null ? 0 : tipo.hashCode()) + (jogador == null ? 0 : jogador.hashCode()) + (num_uelem == null ? 0 : num_uelem.hashCode());
    }

  }
// ***** VDMTOOLS END Name=Peca
;

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=pecasNasCasas KEEP=NO
  public volatile HashMap pecasNasCasas = new HashMap();
// ***** VDMTOOLS END Name=pecasNasCasas

// ***** VDMTOOLS START Name=tabEstado KEEP=NO
  public volatile Object tabEstado = null;
// ***** VDMTOOLS END Name=tabEstado

// ***** VDMTOOLS START Name=mapa_udirecoes KEEP=NO
  private volatile HashMap mapa_udirecoes = new HashMap();
// ***** VDMTOOLS END Name=mapa_udirecoes

// ***** VDMTOOLS START Name=map_ujog KEEP=NO
  private volatile HashMap map_ujog = new HashMap();
// ***** VDMTOOLS END Name=map_ujog

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=TabuleiroSentinel KEEP=NO
  class TabuleiroSentinel extends Sentinel {

    public final int max = 0;

    public final int min = 1;

    public final int come = 2;

    public final int debug = 3;

    public final int teste = 4;

    public final int jogada = 5;

    public final int getPeca = 6;

    public final int fim_ujogo = 7;

    public final int Tabuleiro = 8;

    public final int distancia = 9;

    public final int maiorCasa = 10;

    public final int move_upara = 11;

    public final int pode_ucomer = 12;

    public final int pode_umover = 13;

    public final int casas_uentre = 14;

    public final int existe_upecas = 15;

    public final int muda_ujogador = 16;

    public final int qual_udirecao = 17;

    public final int teste_uFimJogo = 18;

    public final int nr_functions = 19;


    public TabuleiroSentinel () throws CGException {}


    public TabuleiroSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=TabuleiroSentinel
;

// ***** VDMTOOLS START Name=evaluatePP KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return new Boolean(true);
  }
// ***** VDMTOOLS END Name=evaluatePP


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new TabuleiroSentinel(this);
    }
    catch (CGException e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel

// ***** VDMTOOLS START Name=num_ucol KEEP=NO
  private static final HashMap num_ucol;
// ***** VDMTOOLS END Name=num_ucol


// ***** VDMTOOLS START Name=static KEEP=NO
  static {

    HashMap num_ucoltemp = new HashMap();
    {
      try {

        HashMap tmpVal_1 = new HashMap();
        tmpVal_1 = new HashMap();
        tmpVal_1.put(new Character('a'), new Integer(1));
        tmpVal_1.put(new Character('b'), new Integer(2));
        tmpVal_1.put(new Character('c'), new Integer(3));
        tmpVal_1.put(new Character('d'), new Integer(4));
        tmpVal_1.put(new Character('e'), new Integer(5));
        tmpVal_1.put(new Character('f'), new Integer(6));
        tmpVal_1.put(new Character('g'), new Integer(7));
        tmpVal_1.put(new Character('h'), new Integer(8));
        num_ucoltemp = tmpVal_1;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    num_ucol = num_ucoltemp;
  }
// ***** VDMTOOLS END Name=static


// ***** VDMTOOLS START Name=inv_Casa KEEP=NO
  public Boolean inv_Casa (final Casa casa) throws CGException {

    Boolean varRes_2 = null;
    Boolean var1_3 = null;
    Integer var1_4 = null;
    var1_4 = (casa).linha;
    var1_3 = new Boolean(num_ucol.containsValue(var1_4));
    {
      if ((varRes_2 = var1_3).booleanValue()) {

        Boolean var2_7 = null;
        Character var1_8 = null;
        var1_8 = (casa).coluna;
        var2_7 = new Boolean(num_ucol.containsKey(var1_8));
        varRes_2 = var2_7;
      }
    }
    return varRes_2;
  }
// ***** VDMTOOLS END Name=inv_Casa


// ***** VDMTOOLS START Name=inv_Peca KEEP=NO
  public Boolean inv_Peca (final Peca jog) throws CGException {

    Boolean varRes_2 = null;
    Integer var1_3 = null;
    var1_3 = (jog).jogador;
    HashSet var2_5 = new HashSet();
    var2_5 = new HashSet();
    var2_5.add(new Integer(1));
    var2_5.add(new Integer(2));
    varRes_2 = new Boolean(var2_5.contains(var1_3));
    return varRes_2;
  }
// ***** VDMTOOLS END Name=inv_Peca


// ***** VDMTOOLS START Name=Tabuleiro KEEP=NO
  public Tabuleiro () throws CGException {

    try {

      setSentinel();
      pecasNasCasas = new HashMap();
      tabEstado = new quotes.inicial();
      HashSet tmpVar2_9 = new HashSet();
      tmpVar2_9 = new HashSet();
      tmpVar2_9.add(new quotes.diagonal1());
      tmpVar2_9.add(new quotes.diagonal2());
      mapa_udirecoes = new HashMap();
      mapa_udirecoes.put(new quotes.circle(), tmpVar2_9);
      HashSet tmpVar2_13 = new HashSet();
      tmpVar2_13 = new HashSet();
      tmpVar2_13.add(new quotes.horizontal());
      tmpVar2_13.add(new quotes.vertical());
      mapa_udirecoes.put(new quotes.square(), tmpVar2_13);
      HashSet tmpVar2_17 = new HashSet();
      tmpVar2_17 = new HashSet();
      tmpVar2_17.add(new quotes.horizontal());
      tmpVar2_17.add(new quotes.vertical());
      tmpVar2_17.add(new quotes.diagonal1());
      tmpVar2_17.add(new quotes.diagonal2());
      mapa_udirecoes.put(new quotes.queen(), tmpVar2_17);
      map_ujog = new HashMap();
      map_ujog.put(new quotes.vez_jog1(), new Integer(1));
      map_ujog.put(new quotes.vez_jog2(), new Integer(2));
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    try {

      {

        HashMap rhs_1 = new HashMap();
        HashMap var1_2 = new HashMap();
        HashMap var1_3 = new HashMap();
        HashMap var1_4 = new HashMap();
        HashMap var1_5 = new HashMap();
        HashMap res_m_6 = new HashMap();
        {

          HashSet e_set_21 = new HashSet();
          e_set_21 = new HashSet();
          e_set_21.add(new Character('a'));
          e_set_21.add(new Character('c'));
          e_set_21.add(new Character('f'));
          e_set_21.add(new Character('h'));
          HashSet e_set_26 = new HashSet();
          e_set_26 = new HashSet();
          e_set_26.add(new Integer(1));
          e_set_26.add(new Integer(2));
          Integer jog = null;
          Character coluna = null;
          {
            for (Iterator enm_32 = e_set_26.iterator(); enm_32.hasNext(); ) {

              Integer elem_31 = UTIL.NumberToInt(enm_32.next());
              jog = elem_31;
              for (Iterator enm_30 = e_set_21.iterator(); enm_30.hasNext(); ) {

                Character elem_29 = (Character) enm_30.next();
                coluna = elem_29;
                Casa md_7 = null;
                md_7 = new Casa(new Integer(new Integer(new Integer(jog.intValue() - new Integer(1).intValue()).intValue() * new Integer(7).intValue()).intValue() + new Integer(1).intValue()), coluna);
                Peca mr_16 = null;
                mr_16 = new Peca(new quotes.circle(), jog, new Integer(1));
                res_m_6.put(md_7, mr_16);
              }
            }
          }
        }
        var1_5 = res_m_6;
        HashMap var2_33 = new HashMap();
        HashMap res_m_34 = new HashMap();
        {

          HashSet e_set_49 = new HashSet();
          e_set_49 = new HashSet();
          e_set_49.add(new Character('b'));
          e_set_49.add(new Character('g'));
          HashSet e_set_52 = new HashSet();
          e_set_52 = new HashSet();
          e_set_52.add(new Integer(1));
          e_set_52.add(new Integer(2));
          Integer jog = null;
          Character coluna = null;
          {
            for (Iterator enm_58 = e_set_52.iterator(); enm_58.hasNext(); ) {

              Integer elem_57 = UTIL.NumberToInt(enm_58.next());
              jog = elem_57;
              for (Iterator enm_56 = e_set_49.iterator(); enm_56.hasNext(); ) {

                Character elem_55 = (Character) enm_56.next();
                coluna = elem_55;
                Casa md_35 = null;
                md_35 = new Casa(new Integer(new Integer(new Integer(jog.intValue() - new Integer(1).intValue()).intValue() * new Integer(5).intValue()).intValue() + new Integer(2).intValue()), coluna);
                Peca mr_44 = null;
                mr_44 = new Peca(new quotes.circle(), jog, new Integer(1));
                res_m_34.put(md_35, mr_44);
              }
            }
          }
        }
        var2_33 = res_m_34;
        {

          HashMap m1_63 = (HashMap) var1_5.clone();
          HashMap m2_64 = var2_33;
          HashSet com_59 = new HashSet();
          com_59.addAll(m1_63.keySet());
          com_59.retainAll(m2_64.keySet());
          boolean all_applies_60 = true;
          Object d_61;
          for (Iterator bb_62 = com_59.iterator(); bb_62.hasNext() && all_applies_60; ) {

            d_61 = bb_62.next();
            all_applies_60 = m1_63.get(d_61).equals(m2_64.get(d_61));
          }
          if (!all_applies_60) 
            UTIL.RunTime("Run-Time Error:Map Merge: Incompatible maps");
          m1_63.putAll(m2_64);
          var1_4 = m1_63;
        }
        HashMap var2_65 = new HashMap();
        HashMap res_m_66 = new HashMap();
        {

          HashSet e_set_81 = new HashSet();
          e_set_81 = new HashSet();
          e_set_81.add(new Character('b'));
          e_set_81.add(new Character('d'));
          e_set_81.add(new Character('e'));
          e_set_81.add(new Character('g'));
          HashSet e_set_86 = new HashSet();
          e_set_86 = new HashSet();
          e_set_86.add(new Integer(1));
          e_set_86.add(new Integer(2));
          Integer jog = null;
          Character coluna = null;
          {
            for (Iterator enm_92 = e_set_86.iterator(); enm_92.hasNext(); ) {

              Integer elem_91 = UTIL.NumberToInt(enm_92.next());
              jog = elem_91;
              for (Iterator enm_90 = e_set_81.iterator(); enm_90.hasNext(); ) {

                Character elem_89 = (Character) enm_90.next();
                coluna = elem_89;
                Casa md_67 = null;
                md_67 = new Casa(new Integer(new Integer(new Integer(jog.intValue() - new Integer(1).intValue()).intValue() * new Integer(7).intValue()).intValue() + new Integer(1).intValue()), coluna);
                Peca mr_76 = null;
                mr_76 = new Peca(new quotes.square(), jog, new Integer(1));
                res_m_66.put(md_67, mr_76);
              }
            }
          }
        }
        var2_65 = res_m_66;
        {

          HashMap m1_97 = (HashMap) var1_4.clone();
          HashMap m2_98 = var2_65;
          HashSet com_93 = new HashSet();
          com_93.addAll(m1_97.keySet());
          com_93.retainAll(m2_98.keySet());
          boolean all_applies_94 = true;
          Object d_95;
          for (Iterator bb_96 = com_93.iterator(); bb_96.hasNext() && all_applies_94; ) {

            d_95 = bb_96.next();
            all_applies_94 = m1_97.get(d_95).equals(m2_98.get(d_95));
          }
          if (!all_applies_94) 
            UTIL.RunTime("Run-Time Error:Map Merge: Incompatible maps");
          m1_97.putAll(m2_98);
          var1_3 = m1_97;
        }
        HashMap var2_99 = new HashMap();
        HashMap res_m_100 = new HashMap();
        {

          HashSet e_set_115 = new HashSet();
          e_set_115 = new HashSet();
          e_set_115.add(new Character('c'));
          e_set_115.add(new Character('f'));
          HashSet e_set_118 = new HashSet();
          e_set_118 = new HashSet();
          e_set_118.add(new Integer(1));
          e_set_118.add(new Integer(2));
          Integer jog = null;
          Character coluna = null;
          {
            for (Iterator enm_124 = e_set_118.iterator(); enm_124.hasNext(); ) {

              Integer elem_123 = UTIL.NumberToInt(enm_124.next());
              jog = elem_123;
              for (Iterator enm_122 = e_set_115.iterator(); enm_122.hasNext(); ) {

                Character elem_121 = (Character) enm_122.next();
                coluna = elem_121;
                Casa md_101 = null;
                md_101 = new Casa(new Integer(new Integer(new Integer(jog.intValue() - new Integer(1).intValue()).intValue() * new Integer(5).intValue()).intValue() + new Integer(2).intValue()), coluna);
                Peca mr_110 = null;
                mr_110 = new Peca(new quotes.square(), jog, new Integer(1));
                res_m_100.put(md_101, mr_110);
              }
            }
          }
        }
        var2_99 = res_m_100;
        {

          HashMap m1_129 = (HashMap) var1_3.clone();
          HashMap m2_130 = var2_99;
          HashSet com_125 = new HashSet();
          com_125.addAll(m1_129.keySet());
          com_125.retainAll(m2_130.keySet());
          boolean all_applies_126 = true;
          Object d_127;
          for (Iterator bb_128 = com_125.iterator(); bb_128.hasNext() && all_applies_126; ) {

            d_127 = bb_128.next();
            all_applies_126 = m1_129.get(d_127).equals(m2_130.get(d_127));
          }
          if (!all_applies_126) 
            UTIL.RunTime("Run-Time Error:Map Merge: Incompatible maps");
          m1_129.putAll(m2_130);
          var1_2 = m1_129;
        }
        HashMap var2_131 = new HashMap();
        HashMap res_m_132 = new HashMap();
        {

          HashSet e_set_147 = new HashSet();
          e_set_147 = new HashSet();
          e_set_147.add(new Character('a'));
          e_set_147.add(new Character('d'));
          e_set_147.add(new Character('e'));
          e_set_147.add(new Character('h'));
          HashSet e_set_152 = new HashSet();
          e_set_152 = new HashSet();
          e_set_152.add(new Integer(1));
          e_set_152.add(new Integer(2));
          Integer jog = null;
          Character coluna = null;
          {
            for (Iterator enm_158 = e_set_152.iterator(); enm_158.hasNext(); ) {

              Integer elem_157 = UTIL.NumberToInt(enm_158.next());
              jog = elem_157;
              for (Iterator enm_156 = e_set_147.iterator(); enm_156.hasNext(); ) {

                Character elem_155 = (Character) enm_156.next();
                coluna = elem_155;
                Casa md_133 = null;
                md_133 = new Casa(new Integer(new Integer(new Integer(jog.intValue() - new Integer(1).intValue()).intValue() * new Integer(5).intValue()).intValue() + new Integer(2).intValue()), coluna);
                Peca mr_142 = null;
                mr_142 = new Peca(new quotes.queen(), jog, new Integer(1));
                res_m_132.put(md_133, mr_142);
              }
            }
          }
        }
        var2_131 = res_m_132;
        {

          HashMap m1_163 = (HashMap) var1_2.clone();
          HashMap m2_164 = var2_131;
          HashSet com_159 = new HashSet();
          com_159.addAll(m1_163.keySet());
          com_159.retainAll(m2_164.keySet());
          boolean all_applies_160 = true;
          Object d_161;
          for (Iterator bb_162 = com_159.iterator(); bb_162.hasNext() && all_applies_160; ) {

            d_161 = bb_162.next();
            all_applies_160 = m1_163.get(d_161).equals(m2_164.get(d_161));
          }
          if (!all_applies_160) 
            UTIL.RunTime("Run-Time Error:Map Merge: Incompatible maps");
          m1_163.putAll(m2_164);
          rhs_1 = m1_163;
        }
        pecasNasCasas = (HashMap) UTIL.clone(rhs_1);
        tabEstado = UTIL.clone(new quotes.vez_jog1());
      }
      setSentinel();
    }
    catch (Throwable e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=Tabuleiro


// ***** VDMTOOLS START Name=fim_ujogo KEEP=NO
  public Boolean fim_ujogo () throws CGException {

    sentinel.entering(((TabuleiroSentinel) sentinel).fim_ujogo);
    try {

      Boolean rexpr_1 = null;
      Boolean var1_2 = null;
      Integer var1_3 = null;
      HashSet unArg_4 = new HashSet();
      HashMap unArg_5 = new HashMap();
      HashSet var2_7 = new HashSet();
      HashSet res_s_8 = new HashSet();
      {

        HashSet e_set_14 = new HashSet();
        e_set_14 = new HashSet();
        e_set_14.add(new quotes.circle());
        e_set_14.add(new quotes.square());
        e_set_14.add(new quotes.queen());
        HashSet e_set_18 = new HashSet();
        e_set_18 = new HashSet();
        int ubi_21 = new Integer(10).intValue();
        for (int count_22 = new Integer(6).intValue(); count_22 <= ubi_21; count_22++) 
          e_set_18.add(new Integer(count_22));
        Integer n = null;
        Object tipo = null;
        {
          for (Iterator enm_26 = e_set_18.iterator(); enm_26.hasNext(); ) {

            Integer elem_25 = UTIL.NumberToInt(enm_26.next());
            n = elem_25;
            for (Iterator enm_24 = e_set_14.iterator(); enm_24.hasNext(); ) {

              Object elem_23 = enm_24.next();
              tipo = elem_23;
              Peca res_s_9 = null;
              res_s_9 = new Peca(tipo, new Integer(1), n);
              res_s_8.add(res_s_9);
            }
          }
        }
      }
      var2_7 = res_s_8;
      unArg_5 = pecasNasCasas;
      {

        HashMap tmpMap_27 = new HashMap();
        HashSet domM_28 = new HashSet();
        domM_28.addAll(unArg_5.keySet());
        Object elm_29;
        for (Iterator bb_30 = domM_28.iterator(); bb_30.hasNext(); ) {

          elm_29 = bb_30.next();
          if (var2_7.contains(unArg_5.get(elm_29))) 
            tmpMap_27.put(elm_29, unArg_5.get(elm_29));
        }
        unArg_5 = tmpMap_27;
      }
      unArg_4.clear();
      unArg_4.addAll(unArg_5.keySet());
      var1_3 = new Integer(unArg_4.size());
      var1_2 = new Boolean((var1_3.intValue()) >= (new Integer(3).intValue()));
      {
        if (!(rexpr_1 = var1_2).booleanValue()) {

          Boolean var2_32 = null;
          Integer var1_33 = null;
          HashSet unArg_34 = new HashSet();
          HashMap unArg_35 = new HashMap();
          HashSet var2_37 = new HashSet();
          HashSet res_s_38 = new HashSet();
          {

            HashSet e_set_44 = new HashSet();
            e_set_44 = new HashSet();
            e_set_44.add(new quotes.circle());
            e_set_44.add(new quotes.square());
            e_set_44.add(new quotes.queen());
            HashSet e_set_48 = new HashSet();
            e_set_48 = new HashSet();
            int ubi_51 = new Integer(10).intValue();
            for (int count_52 = new Integer(6).intValue(); count_52 <= ubi_51; count_52++) 
              e_set_48.add(new Integer(count_52));
            Integer n = null;
            Object tipo = null;
            {
              for (Iterator enm_56 = e_set_48.iterator(); enm_56.hasNext(); ) {

                Integer elem_55 = UTIL.NumberToInt(enm_56.next());
                n = elem_55;
                for (Iterator enm_54 = e_set_44.iterator(); enm_54.hasNext(); ) {

                  Object elem_53 = enm_54.next();
                  tipo = elem_53;
                  Peca res_s_39 = null;
                  res_s_39 = new Peca(tipo, new Integer(2), n);
                  res_s_38.add(res_s_39);
                }
              }
            }
          }
          var2_37 = res_s_38;
          unArg_35 = pecasNasCasas;
          {

            HashMap tmpMap_57 = new HashMap();
            HashSet domM_58 = new HashSet();
            domM_58.addAll(unArg_35.keySet());
            Object elm_59;
            for (Iterator bb_60 = domM_58.iterator(); bb_60.hasNext(); ) {

              elm_59 = bb_60.next();
              if (var2_37.contains(unArg_35.get(elm_59))) 
                tmpMap_57.put(elm_59, unArg_35.get(elm_59));
            }
            unArg_35 = tmpMap_57;
          }
          unArg_34.clear();
          unArg_34.addAll(unArg_35.keySet());
          var1_33 = new Integer(unArg_34.size());
          var2_32 = new Boolean((var1_33.intValue()) >= (new Integer(3).intValue()));
          rexpr_1 = var2_32;
        }
      }
      return rexpr_1;
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).fim_ujogo);
    }
  }
// ***** VDMTOOLS END Name=fim_ujogo


// ***** VDMTOOLS START Name=jogada KEEP=NO
  public void jogada (final Casa casa1, final Casa casa2) throws CGException {

    if (!this.pre_jogada(casa1, casa2).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in jogada");
    sentinel.entering(((TabuleiroSentinel) sentinel).jogada);
    try {

      Boolean cond_3 = null;
      cond_3 = new Boolean(pecasNasCasas.containsKey(casa2));
      if (cond_3.booleanValue()) 
        come(casa1, casa2);
      else 
        move_upara(casa1, casa2);
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).jogada);
    }
  }
// ***** VDMTOOLS END Name=jogada


// ***** VDMTOOLS START Name=pre_jogada KEEP=NO
  public Boolean pre_jogada (final Casa casa1, final Casa casa2) throws CGException {
    return pode_umover(casa1, casa2);
  }
// ***** VDMTOOLS END Name=pre_jogada


// ***** VDMTOOLS START Name=move_upara KEEP=NO
  private void move_upara (final Casa casa1, final Casa casa2) throws CGException {

    if (!this.pre_move_upara(casa1, casa2).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in move_para");
    sentinel.entering(((TabuleiroSentinel) sentinel).move_upara);
    try {

      Boolean cond_3 = null;
      HashSet var2_5 = new HashSet();
      var2_5.clear();
      var2_5.addAll(pecasNasCasas.keySet());
      cond_3 = new Boolean(!var2_5.contains(casa2));
      if (cond_3.booleanValue()) {

        HashMap rhs_7 = new HashMap();
        HashMap seqmap_10 = new HashMap();
        HashSet var1_11 = new HashSet();
        var1_11 = new HashSet();
        var1_11.add(casa1);
        seqmap_10 = pecasNasCasas;
        {

          HashMap tmpMap_14 = new HashMap();
          HashSet domM_15 = new HashSet();
          domM_15.addAll(seqmap_10.keySet());
          Object elm_16;
          for (Iterator bb_17 = domM_15.iterator(); bb_17.hasNext(); ) {

            elm_16 = bb_17.next();
            if (!var1_11.contains(elm_16)) 
              tmpMap_14.put(elm_16, seqmap_10.get(elm_16));
          }
          seqmap_10 = tmpMap_14;
        }
        HashMap modmap_8 = new HashMap();
        modmap_8 = new HashMap();
        modmap_8.put(casa2, getPeca(casa1));
        rhs_7 = new HashMap(seqmap_10);
        rhs_7.putAll(modmap_8);
        pecasNasCasas = (HashMap) UTIL.clone(rhs_7);
      }
      muda_ujogador();
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).move_upara);
    }
  }
// ***** VDMTOOLS END Name=move_upara


// ***** VDMTOOLS START Name=pre_move_upara KEEP=NO
  private Boolean pre_move_upara (final Casa casa1, final Casa casa2) throws CGException {
    return pode_umover(casa1, casa2);
  }
// ***** VDMTOOLS END Name=pre_move_upara


// ***** VDMTOOLS START Name=come KEEP=NO
  private void come (final Casa casa1, final Casa casa2) throws CGException {

    if (!this.pre_come(casa1, casa2).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in come");
    sentinel.entering(((TabuleiroSentinel) sentinel).come);
    try {

      HashMap rhs_3 = new HashMap();
      HashMap seqmap_6 = new HashMap();
      HashSet var1_7 = new HashSet();
      var1_7 = new HashSet();
      var1_7.add(casa1);
      seqmap_6 = pecasNasCasas;
      {

        HashMap tmpMap_10 = new HashMap();
        HashSet domM_11 = new HashSet();
        domM_11.addAll(seqmap_6.keySet());
        Object elm_12;
        for (Iterator bb_13 = domM_11.iterator(); bb_13.hasNext(); ) {

          elm_12 = bb_13.next();
          if (!var1_7.contains(elm_12)) 
            tmpMap_10.put(elm_12, seqmap_6.get(elm_12));
        }
        seqmap_6 = tmpMap_10;
      }
      HashMap modmap_4 = new HashMap();
      Peca tmpVar2_15 = null;
      Object tmpVar_16 = null;
      tmpVar_16 = (getPeca(casa1)).tipo;
      Integer tmpVar_19 = null;
      tmpVar_19 = (getPeca(casa1)).jogador;
      Integer tmpVar_22 = null;
      Integer var1_23 = null;
      var1_23 = (getPeca(casa1)).num_uelem;
      Integer var2_26 = null;
      var2_26 = (getPeca(casa2)).num_uelem;
      tmpVar_22 = new Integer(var1_23.intValue() + var2_26.intValue());
      tmpVar2_15 = new Peca(tmpVar_16, tmpVar_19, tmpVar_22);
      modmap_4 = new HashMap();
      modmap_4.put(casa2, tmpVar2_15);
      rhs_3 = new HashMap(seqmap_6);
      rhs_3.putAll(modmap_4);
      pecasNasCasas = (HashMap) UTIL.clone(rhs_3);
      muda_ujogador();
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).come);
    }
  }
// ***** VDMTOOLS END Name=come


// ***** VDMTOOLS START Name=pre_come KEEP=NO
  private Boolean pre_come (final Casa casa1, final Casa casa2) throws CGException {
    return pode_ucomer(casa1, casa2);
  }
// ***** VDMTOOLS END Name=pre_come


// ***** VDMTOOLS START Name=pode_umover KEEP=NO
  private Boolean pode_umover (final Casa casa1, final Casa casa2) throws CGException {

    if (!this.pre_pode_umover(casa1, casa2).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in pode_mover");
    sentinel.entering(((TabuleiroSentinel) sentinel).pode_umover);
    try {

      Boolean rexpr_3 = null;
      Boolean var1_4 = null;
      Boolean var1_5 = null;
      Boolean var1_6 = null;
      Boolean var1_7 = null;
      Integer var2_11 = null;
      var2_11 = (getPeca(casa1)).num_uelem;
      var1_7 = new Boolean((distancia(casa1, casa2).intValue()) <= (var2_11.intValue()));
      {
        if ((var1_6 = var1_7).booleanValue()) {

          Boolean var2_14 = null;
          Integer var1_15 = null;
          var1_15 = (getPeca(casa1)).num_uelem;
          var2_14 = new Boolean((var1_15.intValue()) < (new Integer(6).intValue()));
          var1_6 = var2_14;
        }
      }
      {
        if ((var1_5 = var1_6).booleanValue()) {

          Boolean var2_19 = null;
          HashSet var2_23 = new HashSet();
          Object tmppar_25 = null;
          tmppar_25 = (getPeca(casa1)).tipo;
          var2_23 = (HashSet) mapa_udirecoes.get(tmppar_25);
          var2_19 = new Boolean(var2_23.contains(qual_udirecao(casa1, casa2)));
          var1_5 = var2_19;
        }
      }
      {
        if ((var1_4 = var1_5).booleanValue()) 
          var1_4 = new Boolean(!existe_upecas(casa1, casa2).booleanValue());
      }
      {
        if ((rexpr_3 = var1_4).booleanValue()) {

          Boolean var2_32 = null;
          Integer var2_36 = null;
          var2_36 = (getPeca(casa1)).jogador;
          var2_32 = new Boolean(UTIL.NumberToInt(map_ujog.get(tabEstado)).intValue() == var2_36.intValue());
          rexpr_3 = var2_32;
        }
      }
      return rexpr_3;
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).pode_umover);
    }
  }
// ***** VDMTOOLS END Name=pode_umover


// ***** VDMTOOLS START Name=pre_pode_umover KEEP=NO
  private Boolean pre_pode_umover (final Casa casa1, final Casa casa2) throws CGException {

    Boolean varRes_3 = null;
    varRes_3 = new Boolean(pecasNasCasas.containsKey(casa1));
    return varRes_3;
  }
// ***** VDMTOOLS END Name=pre_pode_umover


// ***** VDMTOOLS START Name=pode_ucomer KEEP=NO
  private Boolean pode_ucomer (final Casa casa1, final Casa casa2) throws CGException {

    sentinel.entering(((TabuleiroSentinel) sentinel).pode_ucomer);
    try {

      Boolean rexpr_3 = null;
      Boolean var1_4 = null;
      Boolean var1_5 = null;
      Boolean var1_6 = null;
      var1_6 = new Boolean(pecasNasCasas.containsKey(casa2));
      {
        if ((var1_5 = var1_6).booleanValue()) 
          var1_5 = pode_umover(casa1, casa2);
      }
      {
        if ((var1_4 = var1_5).booleanValue()) {

          Boolean var2_12 = null;
          Integer var2_16 = null;
          var2_16 = (getPeca(casa2)).jogador;
          var2_12 = new Boolean(!(UTIL.NumberToInt(map_ujog.get(tabEstado)).intValue() == var2_16.intValue()));
          var1_4 = var2_12;
        }
      }
      {
        if ((rexpr_3 = var1_4).booleanValue()) {

          Boolean var2_19 = null;
          Integer var1_20 = null;
          var1_20 = (getPeca(casa2)).num_uelem;
          var2_19 = new Boolean((var1_20.intValue()) < (new Integer(6).intValue()));
          rexpr_3 = var2_19;
        }
      }
      return rexpr_3;
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).pode_ucomer);
    }
  }
// ***** VDMTOOLS END Name=pode_ucomer


// ***** VDMTOOLS START Name=distancia KEEP=NO
  private Integer distancia (final Casa casa1, final Casa casa2) throws CGException {

    sentinel.entering(((TabuleiroSentinel) sentinel).distancia);
    try {

      Boolean cond_3 = null;
      Integer var1_4 = null;
      var1_4 = (casa1).linha;
      Integer var2_6 = null;
      var2_6 = (casa2).linha;
      cond_3 = new Boolean(var1_4.intValue() == var2_6.intValue());
      if (cond_3.booleanValue()) {

        Integer rexpr_43 = null;
        Integer unArg_44 = null;
        Integer var1_45 = null;
        Character tmppar_47 = null;
        tmppar_47 = (casa1).coluna;
        var1_45 = UTIL.NumberToInt(num_ucol.get(tmppar_47));
        Integer var2_49 = null;
        Character tmppar_51 = null;
        tmppar_51 = (casa2).coluna;
        var2_49 = UTIL.NumberToInt(num_ucol.get(tmppar_51));
        unArg_44 = new Integer(var1_45.intValue() - var2_49.intValue());
        rexpr_43 = new Integer(Math.abs(unArg_44.intValue()));
        return rexpr_43;
      }
      else {

        Boolean cond_32 = null;
        Character var1_33 = null;
        var1_33 = (casa1).coluna;
        Character var2_35 = null;
        var2_35 = (casa2).coluna;
        cond_32 = new Boolean(UTIL.equals(var1_33, var2_35));
        if (cond_32.booleanValue()) {

          Integer rexpr_37 = null;
          Integer unArg_38 = null;
          Integer var1_39 = null;
          var1_39 = (casa1).linha;
          Integer var2_41 = null;
          var2_41 = (casa2).linha;
          unArg_38 = new Integer(var1_39.intValue() - var2_41.intValue());
          rexpr_37 = new Integer(Math.abs(unArg_38.intValue()));
          return rexpr_37;
        }
        else {

          Boolean cond_9 = null;
          Integer var1_10 = null;
          Integer unArg_11 = null;
          Integer var1_12 = null;
          var1_12 = (casa1).linha;
          Integer var2_14 = null;
          var2_14 = (casa2).linha;
          unArg_11 = new Integer(var1_12.intValue() - var2_14.intValue());
          var1_10 = new Integer(Math.abs(unArg_11.intValue()));
          Integer var2_16 = null;
          Integer unArg_17 = null;
          Integer var1_18 = null;
          Character tmppar_20 = null;
          tmppar_20 = (casa1).coluna;
          var1_18 = UTIL.NumberToInt(num_ucol.get(tmppar_20));
          Integer var2_22 = null;
          Character tmppar_24 = null;
          tmppar_24 = (casa2).coluna;
          var2_22 = UTIL.NumberToInt(num_ucol.get(tmppar_24));
          unArg_17 = new Integer(var1_18.intValue() - var2_22.intValue());
          var2_16 = new Integer(Math.abs(unArg_17.intValue()));
          cond_9 = new Boolean(var1_10.intValue() == var2_16.intValue());
          if (cond_9.booleanValue()) {

            Integer rexpr_26 = null;
            Integer unArg_27 = null;
            Integer var1_28 = null;
            var1_28 = (casa1).linha;
            Integer var2_30 = null;
            var2_30 = (casa2).linha;
            unArg_27 = new Integer(var1_28.intValue() - var2_30.intValue());
            rexpr_26 = new Integer(Math.abs(unArg_27.intValue()));
            return rexpr_26;
          }
          else {
            return new Integer(100);
          }
        }
      }
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).distancia);
    }
  }
// ***** VDMTOOLS END Name=distancia


// ***** VDMTOOLS START Name=qual_udirecao KEEP=NO
  private Object qual_udirecao (final Casa casa1, final Casa casa2) throws CGException {

    sentinel.entering(((TabuleiroSentinel) sentinel).qual_udirecao);
    try {

      Boolean cond_3 = null;
      Integer var1_4 = null;
      var1_4 = (casa1).linha;
      Integer var2_6 = null;
      var2_6 = (casa2).linha;
      cond_3 = new Boolean(var1_4.intValue() == var2_6.intValue());
      if (cond_3.booleanValue()) 
        return new quotes.horizontal();
      else {

        Boolean cond_42 = null;
        Character var1_43 = null;
        var1_43 = (casa1).coluna;
        Character var2_45 = null;
        var2_45 = (casa2).coluna;
        cond_42 = new Boolean(UTIL.equals(var1_43, var2_45));
        if (cond_42.booleanValue()) 
          return new quotes.vertical();
        else {

          Boolean cond_26 = null;
          Integer var1_27 = null;
          Integer var1_28 = null;
          var1_28 = (casa1).linha;
          Integer var2_30 = null;
          var2_30 = (casa2).linha;
          var1_27 = new Integer(var1_28.intValue() - var2_30.intValue());
          Integer var2_32 = null;
          Integer var1_33 = null;
          Character tmppar_35 = null;
          tmppar_35 = (casa1).coluna;
          var1_33 = UTIL.NumberToInt(num_ucol.get(tmppar_35));
          Integer var2_37 = null;
          Character tmppar_39 = null;
          tmppar_39 = (casa2).coluna;
          var2_37 = UTIL.NumberToInt(num_ucol.get(tmppar_39));
          var2_32 = new Integer(var1_33.intValue() - var2_37.intValue());
          cond_26 = new Boolean(var1_27.intValue() == var2_32.intValue());
          if (cond_26.booleanValue()) 
            return new quotes.diagonal1();
          else {

            Boolean cond_9 = null;
            Integer var1_10 = null;
            Integer var1_11 = null;
            var1_11 = (casa1).linha;
            Integer var2_13 = null;
            var2_13 = (casa2).linha;
            var1_10 = new Integer(var1_11.intValue() - var2_13.intValue());
            Integer var2_15 = null;
            Integer unArg_16 = null;
            Integer var1_17 = null;
            Character tmppar_19 = null;
            tmppar_19 = (casa1).coluna;
            var1_17 = UTIL.NumberToInt(num_ucol.get(tmppar_19));
            Integer var2_21 = null;
            Character tmppar_23 = null;
            tmppar_23 = (casa2).coluna;
            var2_21 = UTIL.NumberToInt(num_ucol.get(tmppar_23));
            unArg_16 = new Integer(var1_17.intValue() - var2_21.intValue());
            var2_15 = new Integer(-unArg_16.intValue());
            cond_9 = new Boolean(var1_10.intValue() == var2_15.intValue());
            if (cond_9.booleanValue()) 
              return new quotes.diagonal2();
            else {
              return new quotes.sem_ligacao();
            }
          }
        }
      }
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).qual_udirecao);
    }
  }
// ***** VDMTOOLS END Name=qual_udirecao


// ***** VDMTOOLS START Name=existe_upecas KEEP=NO
  private Boolean existe_upecas (final Casa casa1, final Casa casa2) throws CGException {

    sentinel.entering(((TabuleiroSentinel) sentinel).existe_upecas);
    try {

      Boolean cond_3 = null;
      HashSet var1_4 = new HashSet();
      HashSet var2_8 = new HashSet();
      var2_8.clear();
      var2_8.addAll(pecasNasCasas.keySet());
      var1_4 = (HashSet) casas_uentre(casa1, casa2).clone();
      var1_4.retainAll(var2_8);
      cond_3 = new Boolean(UTIL.equals(var1_4, new HashSet()));
      if (cond_3.booleanValue()) 
        return new Boolean(false);
      else 
        return new Boolean(true);
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).existe_upecas);
    }
  }
// ***** VDMTOOLS END Name=existe_upecas


// ***** VDMTOOLS START Name=casas_uentre KEEP=NO
  private HashSet casas_uentre (final Casa casa1, final Casa casa2) throws CGException {

    sentinel.entering(((TabuleiroSentinel) sentinel).casas_uentre);
    try {
      if (new Boolean(UTIL.equals(qual_udirecao(casa1, casa2), new quotes.vertical())).booleanValue()) {

        HashSet rexpr_147 = new HashSet();
        HashSet res_s_148 = new HashSet();
        {

          HashSet e_set_154 = new HashSet();
          e_set_154 = new HashSet();
          Integer lb_155 = null;
          Integer var1_156 = null;
          Integer par_157 = null;
          par_157 = (casa1).linha;
          Integer par_159 = null;
          par_159 = (casa2).linha;
          var1_156 = min(par_157, par_159);
          lb_155 = new Integer(var1_156.intValue() + new Integer(1).intValue());
          Integer ub_162 = null;
          Integer var1_163 = null;
          Integer par_164 = null;
          par_164 = (casa1).linha;
          Integer par_166 = null;
          par_166 = (casa2).linha;
          var1_163 = max(par_164, par_166);
          ub_162 = new Integer(var1_163.intValue() - new Integer(1).intValue());
          int ubi_169 = ub_162.intValue();
          for (int count_170 = lb_155.intValue(); count_170 <= ubi_169; count_170++) 
            e_set_154.add(new Integer(count_170));
          Integer i = null;
          {
            for (Iterator enm_172 = e_set_154.iterator(); enm_172.hasNext(); ) {

              Integer elem_171 = UTIL.NumberToInt(enm_172.next());
              i = elem_171;
              Casa res_s_149 = null;
              Character tmpVar_151 = null;
              tmpVar_151 = (casa1).coluna;
              res_s_149 = new Casa(i, tmpVar_151);
              res_s_148.add(res_s_149);
            }
          }
        }
        rexpr_147 = res_s_148;
        return rexpr_147;
      }
      else 
        if (new Boolean(UTIL.equals(qual_udirecao(casa1, casa2), new quotes.horizontal())).booleanValue()) {

          HashSet rexpr_104 = new HashSet();
          HashSet res_s_105 = new HashSet();
          {

            HashSet e_set_120 = new HashSet();
            e_set_120 = new HashSet();
            Integer lb_121 = null;
            Integer var1_122 = null;
            Integer par_123 = null;
            Character tmppar_125 = null;
            tmppar_125 = (casa1).coluna;
            par_123 = UTIL.NumberToInt(num_ucol.get(tmppar_125));
            Integer par_127 = null;
            Character tmppar_129 = null;
            tmppar_129 = (casa2).coluna;
            par_127 = UTIL.NumberToInt(num_ucol.get(tmppar_129));
            var1_122 = min(par_123, par_127);
            lb_121 = new Integer(var1_122.intValue() + new Integer(1).intValue());
            Integer ub_132 = null;
            Integer var1_133 = null;
            Integer par_134 = null;
            Character tmppar_136 = null;
            tmppar_136 = (casa1).coluna;
            par_134 = UTIL.NumberToInt(num_ucol.get(tmppar_136));
            Integer par_138 = null;
            Character tmppar_140 = null;
            tmppar_140 = (casa2).coluna;
            par_138 = UTIL.NumberToInt(num_ucol.get(tmppar_140));
            var1_133 = max(par_134, par_138);
            ub_132 = new Integer(var1_133.intValue() - new Integer(1).intValue());
            int ubi_143 = ub_132.intValue();
            for (int count_144 = lb_121.intValue(); count_144 <= ubi_143; count_144++) 
              e_set_120.add(new Integer(count_144));
            Integer i = null;
            {
              for (Iterator enm_146 = e_set_120.iterator(); enm_146.hasNext(); ) {

                Integer elem_145 = UTIL.NumberToInt(enm_146.next());
                i = elem_145;
                Casa res_s_106 = null;
                Integer tmpVar_107 = null;
                tmpVar_107 = (casa1).linha;
                Character tmpVar_109 = null;
                HashMap tmp_m_110 = new HashMap();
                tmp_m_110 = new HashMap();
                HashMap mapType_112 = num_ucol;
                for (Iterator enm_116 = mapType_112.keySet().iterator(); enm_116.hasNext(); ) {

                  Object dom_117 = enm_116.next();
                  Character id_d_114 = (Character) dom_117;
                  Integer id_r_113 = UTIL.NumberToInt(mapType_112.get(dom_117));
                  if (tmp_m_110.containsKey(id_r_113)) 
                    UTIL.RunTime("Run-Time Error:Map is not injective - \'inverse\' fails");
                  else 
                    tmp_m_110.put(id_r_113, id_d_114);
                }
                tmpVar_109 = (Character) tmp_m_110.get(i);
                res_s_106 = new Casa(tmpVar_107, tmpVar_109);
                res_s_105.add(res_s_106);
              }
            }
          }
          rexpr_104 = res_s_105;
          return rexpr_104;
        }
        else {
          if (new Boolean(UTIL.equals(qual_udirecao(casa1, casa2), new quotes.diagonal1())).booleanValue()) {

            HashSet rexpr_65 = new HashSet();
            HashSet res_s_66 = new HashSet();
            {

              HashSet e_set_80 = new HashSet();
              e_set_80 = new HashSet();
              Integer lb_81 = null;
              Integer var1_82 = null;
              Integer par_83 = null;
              par_83 = (casa1).linha;
              Integer par_85 = null;
              par_85 = (casa2).linha;
              var1_82 = min(par_83, par_85);
              lb_81 = new Integer(var1_82.intValue() + new Integer(1).intValue());
              Integer ub_88 = null;
              Integer var1_89 = null;
              Integer par_90 = null;
              par_90 = (casa1).linha;
              Integer par_92 = null;
              par_92 = (casa2).linha;
              var1_89 = max(par_90, par_92);
              ub_88 = new Integer(var1_89.intValue() - new Integer(1).intValue());
              int ubi_95 = ub_88.intValue();
              for (int count_96 = lb_81.intValue(); count_96 <= ubi_95; count_96++) 
                e_set_80.add(new Integer(count_96));
              Integer i = null;
              {
                for (Iterator enm_98 = e_set_80.iterator(); enm_98.hasNext(); ) {

                  Integer elem_97 = UTIL.NumberToInt(enm_98.next());
                  i = elem_97;
                  Casa res_s_67 = null;
                  Character tmpVar_69 = null;
                  HashMap tmp_m_70 = new HashMap();
                  tmp_m_70 = new HashMap();
                  HashMap mapType_72 = num_ucol;
                  for (Iterator enm_76 = mapType_72.keySet().iterator(); enm_76.hasNext(); ) {

                    Object dom_77 = enm_76.next();
                    Character id_d_74 = (Character) dom_77;
                    Integer id_r_73 = UTIL.NumberToInt(mapType_72.get(dom_77));
                    if (tmp_m_70.containsKey(id_r_73)) 
                      UTIL.RunTime("Run-Time Error:Map is not injective - \'inverse\' fails");
                    else 
                      tmp_m_70.put(id_r_73, id_d_74);
                  }
                  tmpVar_69 = (Character) tmp_m_70.get(i);
                  res_s_67 = new Casa(i, tmpVar_69);
                  res_s_66.add(res_s_67);
                }
              }
            }
            rexpr_65 = res_s_66;
            return rexpr_65;
          }
          else {
            if (new Boolean(UTIL.equals(qual_udirecao(casa1, casa2), new quotes.diagonal2())).booleanValue()) {

              HashSet rexpr_14 = new HashSet();
              HashSet res_s_15 = new HashSet();
              {

                HashSet e_set_41 = new HashSet();
                e_set_41 = new HashSet();
                Integer ub_43 = null;
                Integer var1_44 = null;
                Integer var1_45 = null;
                Integer par_46 = null;
                par_46 = (casa1).linha;
                Integer par_48 = null;
                par_48 = (casa2).linha;
                var1_45 = max(par_46, par_48);
                Integer var2_50 = null;
                Integer par_51 = null;
                par_51 = (casa1).linha;
                Integer par_53 = null;
                par_53 = (casa2).linha;
                var2_50 = min(par_51, par_53);
                var1_44 = new Integer(var1_45.intValue() - var2_50.intValue());
                ub_43 = new Integer(var1_44.intValue() - new Integer(1).intValue());
                int ubi_56 = ub_43.intValue();
                for (int count_57 = new Integer(1).intValue(); count_57 <= ubi_56; count_57++) 
                  e_set_41.add(new Integer(count_57));
                Integer i = null;
                {
                  for (Iterator enm_59 = e_set_41.iterator(); enm_59.hasNext(); ) {

                    Integer elem_58 = UTIL.NumberToInt(enm_59.next());
                    i = elem_58;
                    Casa res_s_16 = null;
                    Integer tmpVar_17 = null;
                    Integer var1_18 = null;
                    var1_18 = (maiorCasa(casa1, casa2)).linha;
                    tmpVar_17 = new Integer(var1_18.intValue() - i.intValue());
                    Character tmpVar_23 = null;
                    HashMap tmp_m_24 = new HashMap();
                    tmp_m_24 = new HashMap();
                    HashMap mapType_26 = num_ucol;
                    for (Iterator enm_30 = mapType_26.keySet().iterator(); enm_30.hasNext(); ) {

                      Object dom_31 = enm_30.next();
                      Character id_d_28 = (Character) dom_31;
                      Integer id_r_27 = UTIL.NumberToInt(mapType_26.get(dom_31));
                      if (tmp_m_24.containsKey(id_r_27)) 
                        UTIL.RunTime("Run-Time Error:Map is not injective - \'inverse\' fails");
                      else 
                        tmp_m_24.put(id_r_27, id_d_28);
                    }
                    Integer tmppar_32 = null;
                    Integer var1_33 = null;
                    Character tmppar_35 = null;
                    tmppar_35 = (maiorCasa(casa1, casa2)).coluna;
                    var1_33 = UTIL.NumberToInt(num_ucol.get(tmppar_35));
                    tmppar_32 = new Integer(var1_33.intValue() + i.intValue());
                    tmpVar_23 = (Character) tmp_m_24.get(tmppar_32);
                    res_s_16 = new Casa(tmpVar_17, tmpVar_23);
                    res_s_15.add(res_s_16);
                  }
                }
              }
              rexpr_14 = res_s_15;
              return rexpr_14;
            }
            else {
              return new HashSet();
            }
          }
        }
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).casas_uentre);
    }
  }
// ***** VDMTOOLS END Name=casas_uentre


// ***** VDMTOOLS START Name=maiorCasa KEEP=NO
  private Casa maiorCasa (final Casa casa1, final Casa casa2) throws CGException {

    sentinel.entering(((TabuleiroSentinel) sentinel).maiorCasa);
    try {

      Boolean cond_3 = null;
      Integer var1_4 = null;
      var1_4 = (casa1).linha;
      Integer var2_6 = null;
      var2_6 = (casa2).linha;
      cond_3 = new Boolean((var1_4.intValue()) > (var2_6.intValue()));
      if (cond_3.booleanValue()) 
        return casa1;
      else 
        return casa2;
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).maiorCasa);
    }
  }
// ***** VDMTOOLS END Name=maiorCasa


// ***** VDMTOOLS START Name=muda_ujogador KEEP=NO
  private void muda_ujogador () throws CGException {

    sentinel.entering(((TabuleiroSentinel) sentinel).muda_ujogador);
    try {
      if (new Boolean(!fim_ujogo().booleanValue()).booleanValue()) {
        if (new Boolean(UTIL.equals(tabEstado, new quotes.vez_jog1())).booleanValue()) 
          tabEstado = UTIL.clone(new quotes.vez_jog2());
        else 
          tabEstado = UTIL.clone(new quotes.vez_jog1());
      }
      else 
        tabEstado = UTIL.clone(new quotes.fim());
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).muda_ujogador);
    }
  }
// ***** VDMTOOLS END Name=muda_ujogador


// ***** VDMTOOLS START Name=min KEEP=NO
  private Integer min (final Integer n1, final Integer n2) throws CGException {

    sentinel.entering(((TabuleiroSentinel) sentinel).min);
    try {
      if (new Boolean((n1.intValue()) > (n2.intValue())).booleanValue()) 
        return n2;
      else 
        return n1;
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).min);
    }
  }
// ***** VDMTOOLS END Name=min


// ***** VDMTOOLS START Name=max KEEP=NO
  private Integer max (final Integer n1, final Integer n2) throws CGException {

    sentinel.entering(((TabuleiroSentinel) sentinel).max);
    try {
      if (new Boolean((n1.intValue()) > (n2.intValue())).booleanValue()) 
        return n1;
      else 
        return n2;
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).max);
    }
  }
// ***** VDMTOOLS END Name=max


// ***** VDMTOOLS START Name=getPeca KEEP=NO
  private Peca getPeca (final Casa casa) throws CGException {

    if (!this.pre_getPeca(casa).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in getPeca");
    sentinel.entering(((TabuleiroSentinel) sentinel).getPeca);
    try {
      return (Peca) pecasNasCasas.get(casa);
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).getPeca);
    }
  }
// ***** VDMTOOLS END Name=getPeca


// ***** VDMTOOLS START Name=pre_getPeca KEEP=NO
  private Boolean pre_getPeca (final Casa casa) throws CGException {

    Boolean varRes_2 = null;
    varRes_2 = new Boolean(pecasNasCasas.containsKey(casa));
    return varRes_2;
  }
// ***** VDMTOOLS END Name=pre_getPeca


// ***** VDMTOOLS START Name=teste KEEP=NO
  public void teste () throws CGException {

    sentinel.entering(((TabuleiroSentinel) sentinel).teste);
    try {

      Casa tmpArg_v_2 = null;
      tmpArg_v_2 = new Casa(new Integer(2), new Character('a'));
      Casa tmpArg_v_5 = null;
      tmpArg_v_5 = new Casa(new Integer(3), new Character('b'));
      jogada(tmpArg_v_2, tmpArg_v_5);
      Casa tmpArg_v_9 = null;
      tmpArg_v_9 = new Casa(new Integer(7), new Character('b'));
      Casa tmpArg_v_12 = null;
      tmpArg_v_12 = new Casa(new Integer(6), new Character('c'));
      jogada(tmpArg_v_9, tmpArg_v_12);
      Casa tmpArg_v_16 = null;
      tmpArg_v_16 = new Casa(new Integer(2), new Character('c'));
      Casa tmpArg_v_19 = null;
      tmpArg_v_19 = new Casa(new Integer(3), new Character('c'));
      jogada(tmpArg_v_16, tmpArg_v_19);
      Casa tmpArg_v_23 = null;
      tmpArg_v_23 = new Casa(new Integer(6), new Character('c'));
      Casa tmpArg_v_26 = null;
      tmpArg_v_26 = new Casa(new Integer(5), new Character('b'));
      jogada(tmpArg_v_23, tmpArg_v_26);
      Casa tmpArg_v_30 = null;
      tmpArg_v_30 = new Casa(new Integer(3), new Character('b'));
      Casa tmpArg_v_33 = null;
      tmpArg_v_33 = new Casa(new Integer(4), new Character('b'));
      jogada(tmpArg_v_30, tmpArg_v_33);
      Casa tmpArg_v_37 = null;
      tmpArg_v_37 = new Casa(new Integer(7), new Character('f'));
      Casa tmpArg_v_40 = null;
      tmpArg_v_40 = new Casa(new Integer(6), new Character('f'));
      jogada(tmpArg_v_37, tmpArg_v_40);
      Casa tmpArg_v_44 = null;
      tmpArg_v_44 = new Casa(new Integer(4), new Character('b'));
      Casa tmpArg_v_47 = null;
      tmpArg_v_47 = new Casa(new Integer(5), new Character('b'));
      jogada(tmpArg_v_44, tmpArg_v_47);
      Casa tmpArg_v_51 = null;
      tmpArg_v_51 = new Casa(new Integer(7), new Character('h'));
      Casa tmpArg_v_54 = null;
      tmpArg_v_54 = new Casa(new Integer(6), new Character('h'));
      jogada(tmpArg_v_51, tmpArg_v_54);
      Casa tmpArg_v_58 = null;
      tmpArg_v_58 = new Casa(new Integer(3), new Character('c'));
      Casa tmpArg_v_61 = null;
      tmpArg_v_61 = new Casa(new Integer(4), new Character('c'));
      jogada(tmpArg_v_58, tmpArg_v_61);
      Casa tmpArg_v_65 = null;
      tmpArg_v_65 = new Casa(new Integer(6), new Character('f'));
      Casa tmpArg_v_68 = null;
      tmpArg_v_68 = new Casa(new Integer(6), new Character('e'));
      jogada(tmpArg_v_65, tmpArg_v_68);
      Casa tmpArg_v_72 = null;
      tmpArg_v_72 = new Casa(new Integer(4), new Character('c'));
      Casa tmpArg_v_75 = null;
      tmpArg_v_75 = new Casa(new Integer(5), new Character('c'));
      jogada(tmpArg_v_72, tmpArg_v_75);
      Casa tmpArg_v_79 = null;
      tmpArg_v_79 = new Casa(new Integer(6), new Character('e'));
      Casa tmpArg_v_82 = null;
      tmpArg_v_82 = new Casa(new Integer(5), new Character('e'));
      jogada(tmpArg_v_79, tmpArg_v_82);
      Casa tmpArg_v_86 = null;
      tmpArg_v_86 = new Casa(new Integer(5), new Character('c'));
      Casa tmpArg_v_89 = null;
      tmpArg_v_89 = new Casa(new Integer(5), new Character('d'));
      jogada(tmpArg_v_86, tmpArg_v_89);
      Casa tmpArg_v_93 = null;
      tmpArg_v_93 = new Casa(new Integer(5), new Character('e'));
      Casa tmpArg_v_96 = null;
      tmpArg_v_96 = new Casa(new Integer(5), new Character('d'));
      jogada(tmpArg_v_93, tmpArg_v_96);
      Casa tmpArg_v_100 = null;
      tmpArg_v_100 = new Casa(new Integer(5), new Character('b'));
      Casa tmpArg_v_103 = null;
      tmpArg_v_103 = new Casa(new Integer(5), new Character('d'));
      jogada(tmpArg_v_100, tmpArg_v_103);
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).teste);
    }
  }
// ***** VDMTOOLS END Name=teste


// ***** VDMTOOLS START Name=teste_uFimJogo KEEP=NO
  public Object teste_uFimJogo () throws CGException {

    sentinel.entering(((TabuleiroSentinel) sentinel).teste_uFimJogo);
    try {

      HashMap rhs_1 = new HashMap();
      Casa tmpVar1_2 = null;
      tmpVar1_2 = new Casa(new Integer(1), new Character('a'));
      Peca tmpVar2_5 = null;
      tmpVar2_5 = new Peca(new quotes.queen(), new Integer(1), new Integer(6));
      rhs_1 = new HashMap();
      rhs_1.put(tmpVar1_2, tmpVar2_5);
      Casa tmpVar1_9 = null;
      tmpVar1_9 = new Casa(new Integer(1), new Character('b'));
      Peca tmpVar2_12 = null;
      tmpVar2_12 = new Peca(new quotes.queen(), new Integer(1), new Integer(6));
      rhs_1.put(tmpVar1_9, tmpVar2_12);
      Casa tmpVar1_16 = null;
      tmpVar1_16 = new Casa(new Integer(1), new Character('c'));
      Peca tmpVar2_19 = null;
      tmpVar2_19 = new Peca(new quotes.queen(), new Integer(1), new Integer(5));
      rhs_1.put(tmpVar1_16, tmpVar2_19);
      Casa tmpVar1_23 = null;
      tmpVar1_23 = new Casa(new Integer(6), new Character('c'));
      Peca tmpVar2_26 = null;
      tmpVar2_26 = new Peca(new quotes.queen(), new Integer(2), new Integer(5));
      rhs_1.put(tmpVar1_23, tmpVar2_26);
      pecasNasCasas = (HashMap) UTIL.clone(rhs_1);
      Casa tmpArg_v_31 = null;
      tmpArg_v_31 = new Casa(new Integer(1), new Character('c'));
      Casa tmpArg_v_34 = null;
      tmpArg_v_34 = new Casa(new Integer(6), new Character('c'));
      jogada(tmpArg_v_31, tmpArg_v_34);
      return tabEstado;
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).teste_uFimJogo);
    }
  }
// ***** VDMTOOLS END Name=teste_uFimJogo


// ***** VDMTOOLS START Name=debug KEEP=NO
  public HashSet debug () throws CGException {

    sentinel.entering(((TabuleiroSentinel) sentinel).debug);
    try {

      HashSet rexpr_1 = new HashSet();
      HashSet var1_2 = new HashSet();
      HashMap unArg_3 = new HashMap();
      HashSet var2_5 = new HashSet();
      HashSet res_s_6 = new HashSet();
      {

        HashSet e_set_12 = new HashSet();
        e_set_12 = new HashSet();
        e_set_12.add(new quotes.circle());
        e_set_12.add(new quotes.square());
        e_set_12.add(new quotes.queen());
        HashSet e_set_16 = new HashSet();
        e_set_16 = new HashSet();
        int ubi_19 = new Integer(10).intValue();
        for (int count_20 = new Integer(6).intValue(); count_20 <= ubi_19; count_20++) 
          e_set_16.add(new Integer(count_20));
        Integer n = null;
        Object tipo = null;
        {
          for (Iterator enm_24 = e_set_16.iterator(); enm_24.hasNext(); ) {

            Integer elem_23 = UTIL.NumberToInt(enm_24.next());
            n = elem_23;
            for (Iterator enm_22 = e_set_12.iterator(); enm_22.hasNext(); ) {

              Object elem_21 = enm_22.next();
              tipo = elem_21;
              Peca res_s_7 = null;
              res_s_7 = new Peca(tipo, new Integer(1), n);
              res_s_6.add(res_s_7);
            }
          }
        }
      }
      var2_5 = res_s_6;
      unArg_3 = pecasNasCasas;
      {

        HashMap tmpMap_25 = new HashMap();
        HashSet domM_26 = new HashSet();
        domM_26.addAll(unArg_3.keySet());
        Object elm_27;
        for (Iterator bb_28 = domM_26.iterator(); bb_28.hasNext(); ) {

          elm_27 = bb_28.next();
          if (var2_5.contains(unArg_3.get(elm_27))) 
            tmpMap_25.put(elm_27, unArg_3.get(elm_27));
        }
        unArg_3 = tmpMap_25;
      }
      var1_2.clear();
      var1_2.addAll(unArg_3.keySet());
      HashSet var2_29 = new HashSet();
      HashMap unArg_30 = new HashMap();
      HashSet var2_32 = new HashSet();
      HashSet res_s_33 = new HashSet();
      {

        HashSet e_set_39 = new HashSet();
        e_set_39 = new HashSet();
        e_set_39.add(new quotes.circle());
        e_set_39.add(new quotes.square());
        e_set_39.add(new quotes.queen());
        HashSet e_set_43 = new HashSet();
        e_set_43 = new HashSet();
        int ubi_46 = new Integer(10).intValue();
        for (int count_47 = new Integer(6).intValue(); count_47 <= ubi_46; count_47++) 
          e_set_43.add(new Integer(count_47));
        Integer n = null;
        Object tipo = null;
        {
          for (Iterator enm_51 = e_set_43.iterator(); enm_51.hasNext(); ) {

            Integer elem_50 = UTIL.NumberToInt(enm_51.next());
            n = elem_50;
            for (Iterator enm_49 = e_set_39.iterator(); enm_49.hasNext(); ) {

              Object elem_48 = enm_49.next();
              tipo = elem_48;
              Peca res_s_34 = null;
              res_s_34 = new Peca(tipo, new Integer(2), n);
              res_s_33.add(res_s_34);
            }
          }
        }
      }
      var2_32 = res_s_33;
      unArg_30 = pecasNasCasas;
      {

        HashMap tmpMap_52 = new HashMap();
        HashSet domM_53 = new HashSet();
        domM_53.addAll(unArg_30.keySet());
        Object elm_54;
        for (Iterator bb_55 = domM_53.iterator(); bb_55.hasNext(); ) {

          elm_54 = bb_55.next();
          if (var2_32.contains(unArg_30.get(elm_54))) 
            tmpMap_52.put(elm_54, unArg_30.get(elm_54));
        }
        unArg_30 = tmpMap_52;
      }
      var2_29.clear();
      var2_29.addAll(unArg_30.keySet());
      rexpr_1 = (HashSet) var1_2.clone();
      rexpr_1.addAll(var2_29);
      return rexpr_1;
    }
    finally {
      sentinel.leaving(((TabuleiroSentinel) sentinel).debug);
    }
  }
// ***** VDMTOOLS END Name=debug

}
;
